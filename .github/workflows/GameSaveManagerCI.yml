name: GameSaveManager-CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]
        targetplatform: x86

    runs-on: windows-latest

    env:
      App_Packages_Directory: AppPackages
      SigningCertificate: GameSaveManager.Package_TemporaryKey.pfx
      Solution_Name: GameSaveManager.sln
      Wpf_Project_Path: GameSaveManager.DesktopApp/GameSaveManager.DesktopApp.csproj
      Wap_Project_Directory: GameSaveManager.Package
      Wap_Project_Path: GameSaveManager.Package.wapproj

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Nerdbank.GitVersioning
      uses: dotnet/nbgv@v0.3.1
      with:
        setAllVars: true

    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.402'

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.1

    - name: Update manifest version
      run: |
        [xml]$manifest = get-content ".\$env:Wap_Project_Directory\Package.appxmanifest"
        $manifest.Package.Identity.Version = "$env:NBGV_SimpleVersion.0"
        $manifest.save(".\$env:Wap_Project_Directory\Package.appxmanifest")

    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration /p:RuntimeIdentifier=$env:RuntimeIdentifier
      env:
        Configuration: Debug
        RuntimeIdentifier: win-${{ matrix.targetplatform }}

    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
        $currentDirectory = Get-Location
        $certificatePath = Join-Path -Path $currentDirectory -ChildPath $env:Wap_Project_Directory -AdditionalChildPath $env:SigningCertificate
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Create the app package
      run: msbuild $env:Solution_Path /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:BuildMode /p:AppxBundle=$env:AppxBundle /p:PackageCertificateKeyFile=$env:Wap_Project_Directory\$env:SigningCertificate /p:PackageCertificatePassword=${{ secrets.PFX_KEY }}
      env:
        AppxBundle: Never
        BuildMode: SideloadOnly
        Configuration: Debug
        TargetPlatform: ${{ matrix.targetplatform }}

    - name: Remove the pfx
      run: Remove-Item -path $env:Wap_Project_Directory\$env:Signing_Certificate

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\${{ env.App_Packages_Directory }}